IMPORTANT NOTE: I did in the SSMS .MICROSOFT SQL SERVER MANAGMENT STUDIO.


----ABC-Fashion-SQL-Assignment.


CREATE DATABASE  Assi1

USE Assi1

----Salesman table creation

CREATE TABLE Salesman (
    SalesmanId INT,
    Name VARCHAR(255),
    Commission DECIMAL(10, 2),
    City VARCHAR(255),
    Age INT
);

------Salesman table record insertion 

INSERT INTO Salesman (SalesmanId, Name, Commission, City, Age)
VALUES
    (101, 'Joe', 50, 'California', 17),
    (102, 'Simon', 75, 'Texas', 25),
    (103, 'Jessie', 105, 'Florida', 35),
    (104, 'Danny', 100, 'Texas', 22),
    (105, 'Lia', 65, 'New Jersey', 30);

	select * from salesman

-------***************************--------------------******************----------

----Customer table creation

CREATE TABLE Customer (
    SalesmanId INT,
    CustomerId INT,
    CustomerName VARCHAR(255),
    PurchaseAmount INT,
    );


----Customer table record insertion 

INSERT INTO Customer (SalesmanId, CustomerId, CustomerName, PurchaseAmount)
VALUES
    (101, 2345, 'Andrew', 550),
    (103, 1575, 'Lucky', 4500),
    (104, 2345, 'Andrew', 4000),
    (107, 3747, 'Remona', 2700),
    (110, 4004, 'Julia', 4545);

	Select * from customer

--------***************************--------------------******************----------

------Orders table Creation


CREATE TABLE Orders(OrderId int, CustomerId int, SalesmanId int, Orderdate Date, Amount money)

-----Orders table record insertion 

INSERT INTO Orders Values 
(5001,2345,101,'2021-07-01',550),
(5003,1234,105,'2022-02-15',1500);


    Select * from orders

--------***************************--------------------******************----------*******************--------------********************-----------------*******-------

----Tasks to be Performed:

----1.Insert a new record in your Orders table.

Select * from Orders

INSERT into Orders values
(5002, 2344, 102, '2021-06-16', 1000),

--------***************************--------------------******************----------

----2.A.Add Primary key constraint for SalesmanId column in Salesman table. 
------B.Add default constraint for City column in Salesman table. 
------C.Add Foreign key constraint for SalesmanId column in Customer table. 
------D.Add not null constraint in Customer_name column for theCustomer table.

------A.Add Primary key constraint for SalesmanId column in Salesman table. 

     Select * from Salesman

---A PRIMARY KEY is a field which can uniquely identify each row in a table.
---PRIMARY KEY must contains UNIQUE values, & cannot contain NULL VALUES.

Alter table salesman alter column salesmanId int not null

---PRIMARY KEY must contains UNIQUE values, & cannot contain NULL VALUES.

Alter table salesman add constraint pk_salesman PRIMARY KEY(SalesmanId)

select * from INFORMATION_SCHEMA.TABLE_CONSTRAINTS where TABLE_NAME = 'Salesman'

--------------------------------------------------------------------------

------B.Add default constraint for City column in Salesman table. 

Select * from Salesman   

Alter table Salesman add constraint df_City Default 'UNKNOWN' for  City

----***------------------******************---------------------*******----

------C.Add Foreign key constraint for SalesmanId column in Customer table.

Select * from  Customer---Foreig key 

Select * from Salesman---Primary key 

----SalesmanId values: 101, 102, 103, 104, 105.
----Customer table SalesmanId: 101, 103,104, 107, 110.

---***If i try to create to make FOREIGN KEY CONSTRAINT . Definitely, I will get the error . Because all values in the foreign key matched values in the primary key,
---***the foreign key values 107 and 110 do not exist in the primary key list. 
---Either have to insert the 104, 105 values in the Customer table SalesmanId or delete the 107, 110 in the customer table.

Select * from Customer

Insert into Customer values
(102, 2346, 'Sai', 1500),
(105, 2347,  'Reddi', 4500)

ALTER TABLE Customer
ADD CONSTRAINT fk_Salesman
FOREIGN KEY (SalesmanId) REFERENCES Salesman(SalesmanId)

---***ERROR: The ALTER TABLE statement conflicted with the FOREIGN KEY constraint "fk_Salesman". The conflict occurred in database "Assi1", table "dbo.Salesman", column 'SalesmanId'.
---***ERROR EXPLAINATION ABOVE : CONFLICT MEANS MISMATCH THE VALUES in the table between Salesman TABLE SalesmanId & Customer table SalesmanId.
---***---I think I have to insert into Salesman tabel SalesmanId 107, 110.


Select * from Salesman

INSERT into Salesman Values
(107, 'Guru', 200, 'Florida', 23),
(110, 'Reddi', 175, 'DC', 21 )
---I Inserted because 107, 110 Salesman should match with customer table. The foreign keys must match with Primary key. 

ALTER TABLE Customer
ADD CONSTRAINT fk_Salesman
FOREIGN KEY (SalesmanId) REFERENCES Salesman(SalesmanId)

---SYNTAX : ALTER TABLE table_name ADD CONSTRAINT fk_constraint_name FOREIGN KEY (column1, column2, … REFERENCES parent_table(column1, column2, …)

--------***************************--------------------******************----------*******************--------------********************-----------------*******-------

------D.Add not null constraint in Customer_name column for theCustomer table.

Select * from Customer

alter table Customer alter column CustomerName varchar(255) NOT NULL

select * from sys.check_constraints

select * from INFORMATION_SCHEMA.TABLE_CONSTRAINTS where TABLE_NAME = 'Customer'

--------***************************--------------------******************----------*******************--------------********************-----------------*******-------

---3.Fetch the data where the Customer’s name is ending with ‘N’ also get the purchase amount value greater than 500

Select * from Customer

select * from Customer where CustomerName like '%n' AND PurchaseAmount > 500

--------***************************--------------------******************----------*******************--------------********************-----------------*******-------

---4.Using SET operators, retrieve the first result with unique SalesmanId values from two
 tables, and the other result containing SalesmanId with duplicates from two tables.


SELECT SalesmanId FROM Salesman
UNION
SELECT SalesmanId FROM Customer;

---UNION returns only unique SalesmanId values from both tables, removing any duplicates

SELECT SalesmanId FROM Salesman
UNION ALL
SELECT SalesmanId FROM Customer;


---UNION ALL includes all SalesmanId values from both tables, keeping duplicates.

--------***************************--------------------******************----------*******************--------------********************-----------------*******-------

---5.Display the below columns which has the matching data. Orderdate, Salesman Name, Customer Name, Commission, and City which has the range of Purchase Amount between 500 to 1500.

Select * from Customer
select * from Orders
select * from Salesman

 ---Using alter add Orderdate DATE

ALTER TABLE Customer ADD Orderdate DATE;
 

 SELECT 
    Customer.Orderdate, 
    Salesman.Name AS SalesmanName, 
    Customer.CustomerName, 
    Salesman.Commission, 
    Salesman.City
FROM 
    Salesman
JOIN 
    Customer ON Salesman.SalesmanId = Customer.SalesmanId
WHERE Customer.PurchaseAmount BETWEEN 500 AND 1500;

--------***************************--------------------******************----------*******************--------------********************-----------------*******-------

--6.Using right join fetch all the results from Salesman and Orders table.

SELECT 
    Orders.*, 
    Salesman.Name AS SalesmanName, 
    Salesman.Commission, 
    Salesman.City
FROM 
    Salesman
RIGHT JOIN 
    Orders ON Salesman.SalesmanId = Orders.SalesmanId;









